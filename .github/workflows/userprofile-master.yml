name: Userprofile Master

env:
  registry:  openhackg8i5trw0acr.azurecr.io
  repository:  devopsoh/api-userprofile
  webapp_name: openhackg8i5trw0userprofile
  resource_group: openhackg8i5trw0rg
  staging_url: https://openhackg8i5trw0userprofile-staging.azurewebsites.net/api/healthcheck/user
  production_url: https://openhackg8i5trw0userprofile.azurewebsites.net/api/healthcheck/user
  
  
defaults:
  run:
    shell: bash
    working-directory: apis/userprofile

on:
  push:
    branches: [master]
    paths:
    - 'apis/userprofile/**'
    - '.github/workflows/userprofile-master.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install

    - run: npm run build --if-present

    - run: npm test
      env:
        CI: true

    - name: My backup step
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_BUILD_FAILED.md

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

    - name: My backup step
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_BUILD_FAILED.md

    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        path: apis/userprofile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: ${{ env.registry }}
        repository: ${{ env.repository }}
        tags: ${{ github.sha }}

    - uses: azure/webapps-deploy@v2
      name: WebApp Deploy
      with:
        app-name: ${{ env.webapp_name }}
        publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE_STAGING }}
        images: ${{ env.registry }}/${{ env.repository }}:${{ github.sha }}
        slot-name: staging

    - uses: toppulous/create-manual-approval-issue@v1 
      with:
        label: manual-approval
